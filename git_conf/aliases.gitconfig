[alias]

# Taken from https://stackoverflow.com/questions/6245570
curr-branch = symbolic-ref --short HEAD

default-remote = "!git config --get branch.$(git rev-parse --abbrev-ref HEAD).remote"

merged = branch --merged  # optional branch argument
retrack = "!f() { git branch --force \"$1\" \"origin/$1\"; }; f"
detach = checkout --detach HEAD

fetchp = fetch --prune
prune-remote = remote prune  # requires a remote name argument
# Does a comparision relative to the current HEAD
delete-merged = "!git for-each-ref --format=\"%(refname:short)\" refs/heads | xargs git branch -d"

resign = commit --am --no-edit -S
sign-from = rebase --force -S  # requires a commit hash argument

# Try the commit again if it failed due to signing issues, recovering the old commit message
rcommit = !"git commit -t .git/COMMIT_EDITMSG"

fixup = commit -a --fixup  # requires a commit hash argument
autosq = rebase -i --autosquash  # requires a commit hash argument

absorbs = absorb -r --base  # requires a commit hash argument
ama = commit --am -a

raw-commit = log --format=%B -n 1  # optional commit hash argument

# For common typos
pulll = pull
commi = commit
statu = status
lo = log
sho = show
